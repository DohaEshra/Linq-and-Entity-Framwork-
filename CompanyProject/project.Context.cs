//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CompanyProject
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CompanyProjectEntities1 : DbContext
    {
        public CompanyProjectEntities1()
            : base("name=CompanyProjectEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductUnit> ProductUnits { get; set; }
        public virtual DbSet<PurchasingOrder> PurchasingOrders { get; set; }
        public virtual DbSet<SalesOrder> SalesOrders { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Warehouse> Warehouses { get; set; }
        public virtual DbSet<Warehouse_prod_PurchOrd> Warehouse_prod_PurchOrd { get; set; }
        public virtual DbSet<Warehouse_prod_salesOrd> Warehouse_prod_salesOrd { get; set; }
        public virtual DbSet<warehouse_products> warehouse_products { get; set; }
    
        public virtual ObjectResult<getExpiration_Result> getExpiration()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getExpiration_Result>("getExpiration");
        }
    
        public virtual ObjectResult<getPeriod_Result> getPeriod()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPeriod_Result>("getPeriod");
        }
    
        public virtual int insert_cst(string name, Nullable<int> phone, Nullable<int> fax, Nullable<int> mob, string email, string web)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(int));
    
            var faxParameter = fax.HasValue ?
                new ObjectParameter("fax", fax) :
                new ObjectParameter("fax", typeof(int));
    
            var mobParameter = mob.HasValue ?
                new ObjectParameter("mob", mob) :
                new ObjectParameter("mob", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var webParameter = web != null ?
                new ObjectParameter("web", web) :
                new ObjectParameter("web", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_cst", nameParameter, phoneParameter, faxParameter, mobParameter, emailParameter, webParameter);
        }
    
        public virtual int insert_prod(Nullable<int> id, string name, string punit)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var punitParameter = punit != null ?
                new ObjectParameter("punit", punit) :
                new ObjectParameter("punit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_prod", idParameter, nameParameter, punitParameter);
        }
    
        public virtual ObjectResult<string> insert_PurchasingOrder(Nullable<int> pId, Nullable<System.DateTime> ordDate, string sup_name, string w_name, Nullable<int> prod_ID, Nullable<int> q, Nullable<System.DateTime> pro_date, Nullable<int> exp_dur)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            var ordDateParameter = ordDate.HasValue ?
                new ObjectParameter("ordDate", ordDate) :
                new ObjectParameter("ordDate", typeof(System.DateTime));
    
            var sup_nameParameter = sup_name != null ?
                new ObjectParameter("sup_name", sup_name) :
                new ObjectParameter("sup_name", typeof(string));
    
            var w_nameParameter = w_name != null ?
                new ObjectParameter("w_name", w_name) :
                new ObjectParameter("w_name", typeof(string));
    
            var prod_IDParameter = prod_ID.HasValue ?
                new ObjectParameter("prod_ID", prod_ID) :
                new ObjectParameter("prod_ID", typeof(int));
    
            var qParameter = q.HasValue ?
                new ObjectParameter("q", q) :
                new ObjectParameter("q", typeof(int));
    
            var pro_dateParameter = pro_date.HasValue ?
                new ObjectParameter("pro_date", pro_date) :
                new ObjectParameter("pro_date", typeof(System.DateTime));
    
            var exp_durParameter = exp_dur.HasValue ?
                new ObjectParameter("exp_dur", exp_dur) :
                new ObjectParameter("exp_dur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("insert_PurchasingOrder", pIdParameter, ordDateParameter, sup_nameParameter, w_nameParameter, prod_IDParameter, qParameter, pro_dateParameter, exp_durParameter);
        }
    
        public virtual int insert_SalesOrder(Nullable<int> sId, Nullable<System.DateTime> ordDate, string cst_name, string w_name, Nullable<int> prod_ID, Nullable<int> q)
        {
            var sIdParameter = sId.HasValue ?
                new ObjectParameter("sId", sId) :
                new ObjectParameter("sId", typeof(int));
    
            var ordDateParameter = ordDate.HasValue ?
                new ObjectParameter("ordDate", ordDate) :
                new ObjectParameter("ordDate", typeof(System.DateTime));
    
            var cst_nameParameter = cst_name != null ?
                new ObjectParameter("Cst_name", cst_name) :
                new ObjectParameter("Cst_name", typeof(string));
    
            var w_nameParameter = w_name != null ?
                new ObjectParameter("w_name", w_name) :
                new ObjectParameter("w_name", typeof(string));
    
            var prod_IDParameter = prod_ID.HasValue ?
                new ObjectParameter("prod_ID", prod_ID) :
                new ObjectParameter("prod_ID", typeof(int));
    
            var qParameter = q.HasValue ?
                new ObjectParameter("q", q) :
                new ObjectParameter("q", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_SalesOrder", sIdParameter, ordDateParameter, cst_nameParameter, w_nameParameter, prod_IDParameter, qParameter);
        }
    
        public virtual int insert_sup(string name, Nullable<int> phone, Nullable<int> fax, Nullable<int> mob, string email, string web)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(int));
    
            var faxParameter = fax.HasValue ?
                new ObjectParameter("fax", fax) :
                new ObjectParameter("fax", typeof(int));
    
            var mobParameter = mob.HasValue ?
                new ObjectParameter("mob", mob) :
                new ObjectParameter("mob", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var webParameter = web != null ?
                new ObjectParameter("web", web) :
                new ObjectParameter("web", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_sup", nameParameter, phoneParameter, faxParameter, mobParameter, emailParameter, webParameter);
        }
    
        public virtual int insert_W(string name, string address, Nullable<int> m_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var m_idParameter = m_id.HasValue ?
                new ObjectParameter("m_id", m_id) :
                new ObjectParameter("m_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_W", nameParameter, addressParameter, m_idParameter);
        }
    
        public virtual ObjectResult<productReport_Result> productReport(string w_name, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var w_nameParameter = w_name != null ?
                new ObjectParameter("w_name", w_name) :
                new ObjectParameter("w_name", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<productReport_Result>("productReport", w_nameParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<productsMovements_Result> productsMovements(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<productsMovements_Result>("productsMovements", fromdateParameter, todateParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int transferProduct(string fromWarehouse, string toWarehouse, Nullable<int> prod_id, Nullable<int> q)
        {
            var fromWarehouseParameter = fromWarehouse != null ?
                new ObjectParameter("fromWarehouse", fromWarehouse) :
                new ObjectParameter("fromWarehouse", typeof(string));
    
            var toWarehouseParameter = toWarehouse != null ?
                new ObjectParameter("toWarehouse", toWarehouse) :
                new ObjectParameter("toWarehouse", typeof(string));
    
            var prod_idParameter = prod_id.HasValue ?
                new ObjectParameter("prod_id", prod_id) :
                new ObjectParameter("prod_id", typeof(int));
    
            var qParameter = q.HasValue ?
                new ObjectParameter("q", q) :
                new ObjectParameter("q", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("transferProduct", fromWarehouseParameter, toWarehouseParameter, prod_idParameter, qParameter);
        }
    
        public virtual int update_cst(string name, Nullable<int> phone, Nullable<int> fax, Nullable<int> mob, string email, string web)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(int));
    
            var faxParameter = fax.HasValue ?
                new ObjectParameter("fax", fax) :
                new ObjectParameter("fax", typeof(int));
    
            var mobParameter = mob.HasValue ?
                new ObjectParameter("mob", mob) :
                new ObjectParameter("mob", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var webParameter = web != null ?
                new ObjectParameter("web", web) :
                new ObjectParameter("web", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_cst", nameParameter, phoneParameter, faxParameter, mobParameter, emailParameter, webParameter);
        }
    
        public virtual int update_product(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_product", idParameter, nameParameter);
        }
    
        public virtual int update_PurchasingOrder(Nullable<int> pId, Nullable<System.DateTime> ordDate, string sup_name, string w_name, Nullable<int> prod_ID, Nullable<int> q, Nullable<System.DateTime> pro_date, Nullable<int> exp_dur)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            var ordDateParameter = ordDate.HasValue ?
                new ObjectParameter("ordDate", ordDate) :
                new ObjectParameter("ordDate", typeof(System.DateTime));
    
            var sup_nameParameter = sup_name != null ?
                new ObjectParameter("sup_name", sup_name) :
                new ObjectParameter("sup_name", typeof(string));
    
            var w_nameParameter = w_name != null ?
                new ObjectParameter("w_name", w_name) :
                new ObjectParameter("w_name", typeof(string));
    
            var prod_IDParameter = prod_ID.HasValue ?
                new ObjectParameter("prod_ID", prod_ID) :
                new ObjectParameter("prod_ID", typeof(int));
    
            var qParameter = q.HasValue ?
                new ObjectParameter("q", q) :
                new ObjectParameter("q", typeof(int));
    
            var pro_dateParameter = pro_date.HasValue ?
                new ObjectParameter("pro_date", pro_date) :
                new ObjectParameter("pro_date", typeof(System.DateTime));
    
            var exp_durParameter = exp_dur.HasValue ?
                new ObjectParameter("exp_dur", exp_dur) :
                new ObjectParameter("exp_dur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_PurchasingOrder", pIdParameter, ordDateParameter, sup_nameParameter, w_nameParameter, prod_IDParameter, qParameter, pro_dateParameter, exp_durParameter);
        }
    
        public virtual int update_SalesOrder(Nullable<int> sId, Nullable<System.DateTime> ordDate, string cst_name, string w_name, Nullable<int> prod_ID, Nullable<int> q)
        {
            var sIdParameter = sId.HasValue ?
                new ObjectParameter("sId", sId) :
                new ObjectParameter("sId", typeof(int));
    
            var ordDateParameter = ordDate.HasValue ?
                new ObjectParameter("ordDate", ordDate) :
                new ObjectParameter("ordDate", typeof(System.DateTime));
    
            var cst_nameParameter = cst_name != null ?
                new ObjectParameter("Cst_name", cst_name) :
                new ObjectParameter("Cst_name", typeof(string));
    
            var w_nameParameter = w_name != null ?
                new ObjectParameter("w_name", w_name) :
                new ObjectParameter("w_name", typeof(string));
    
            var prod_IDParameter = prod_ID.HasValue ?
                new ObjectParameter("prod_ID", prod_ID) :
                new ObjectParameter("prod_ID", typeof(int));
    
            var qParameter = q.HasValue ?
                new ObjectParameter("q", q) :
                new ObjectParameter("q", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_SalesOrder", sIdParameter, ordDateParameter, cst_nameParameter, w_nameParameter, prod_IDParameter, qParameter);
        }
    
        public virtual int update_sup(string name, Nullable<int> phone, Nullable<int> fax, Nullable<int> mob, string email, string web)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(int));
    
            var faxParameter = fax.HasValue ?
                new ObjectParameter("fax", fax) :
                new ObjectParameter("fax", typeof(int));
    
            var mobParameter = mob.HasValue ?
                new ObjectParameter("mob", mob) :
                new ObjectParameter("mob", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var webParameter = web != null ?
                new ObjectParameter("web", web) :
                new ObjectParameter("web", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_sup", nameParameter, phoneParameter, faxParameter, mobParameter, emailParameter, webParameter);
        }
    
        public virtual int update_W(string name, string address, Nullable<int> m_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var m_idParameter = m_id.HasValue ?
                new ObjectParameter("m_id", m_id) :
                new ObjectParameter("m_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_W", nameParameter, addressParameter, m_idParameter);
        }
    
        public virtual ObjectResult<WarehouseReport_Result> WarehouseReport(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WarehouseReport_Result>("WarehouseReport", fromdateParameter, todateParameter);
        }
    }
}
